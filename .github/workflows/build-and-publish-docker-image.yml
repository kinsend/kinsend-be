# This Github workflow only builds a Docker image, it will not publish it to the AWS ECR private registry.
name: build-docker-image
on:
  pull_request:
    branches:
      - develop
      - master

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: kinsend-be
  # For DEV
  DEV_AWS_ACCOUNT_ID: 874822220446
  DEV_ECR_REGISTRY: 874822220446.dkr.ecr.us-east-1.amazonaws.com
  # For PROD
  PROD_AWS_ACCOUNT_ID: 874822220446
  PROD_ECR_REGISTRY: 874822220446.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-docker-image:
    runs-on: ks-linux
    env:
      ECR_REPOSITORY: kinsend-be

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Select deployment registry
        id: registry
        run: |
          branch=${{ github.base_ref }}
          if [[ $branch == "master" ]] ; then 
              echo "url=${{ env.PROD_ECR_REGISTRY }}" >> $GITHUB_OUTPUT
          else 
              echo "url=${{ env.DEV_ECR_REGISTRY }}" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
#          role-to-assume: arn:aws:iam::202337591493:role/kinsend-infra
          role-skip-session-tagging: true
          role-duration-seconds: 900

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.0

      - name: Debug
        run: |
          cat ~/.docker/config.json | jq '.auths | keys[] | select(contains("amazonaws"))'

      - name: Build the Docker image
        env:
          # We're using the pull request number as the tag for the image
          IMAGE_TAG: PR-${{ github.event.number }}
          ECR_REGISTRY: ${{ steps.registry.outputs.url }}
          IMAGE: ${{ env.ECR_REPOSITORY }}
        run: |
          docker build -t ${ECR_REGISTRY}/${IMAGE}:${IMAGE_TAG} .

      - name: Push the Docker image
        env:
          # We're using the pull request number as the tag for the image
          IMAGE_TAG: PR-${{ github.event.number }}
          ECR_REGISTRY: ${{ steps.registry.outputs.url }}
          IMAGE: ${{ env.ECR_REPOSITORY }}
        run: |
          docker push $ECR_REGISTRY/$IMAGE:$IMAGE_TAG
