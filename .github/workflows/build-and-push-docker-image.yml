# This Github workflow only builds a Docker image, it will not publish it to the AWS ECR private registry.
name: build-and-push-docker-image
run-name: Build and push image using ${{ inputs.BRANCH != '' && inputs.BRANCH || 'PR-${{ github.event.number }}' }}

on:
  workflow_dispatch:
    inputs:
      BRANCH:
        type: choice
        options:
          - develop
          - master
        description: Branch to build and push
        default: develop
        required: true

  repository_dispatch:
    types: [ "docker:push-command" ]

env:
  PROD_AWS_ACCOUNT_ID: 780602547172
  DEV_AWS_ACCOUNT_ID: 874822220446
  AWS_REGION: us-east-1
  ECR_REPOSITORY: kinsend-be
  GIT_REF: ${{ inputs.BRANCH != '' && inputs.BRANCH || github.event.client_payload.pull_request.head.sha }}
  IMAGE_REF: ${{ inputs.BRANCH != '' && inputs.BRANCH || 'PR-${{ github.event.number }}' }}

jobs:
  build-docker-image:
    runs-on: ks-linux

    # These permissions are required to allow writing comments and reporting check status.
    permissions:
      contents: write
      actions: write
      issues: write
      statuses: write

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.GIT_REF }}

      - name: Get git commit hash
        uses: pr-mpt/actions-commit-hash@v2
        id: commit

      - name: Configure dynamic variables
        id: vars
        run: |
          # For local dev.
          # GITHUB_OUTPUT=/dev/stdout
          ref=${{ env.GIT_REF }}
          echo "Ref => $ref"
          
          accountId=${{ env.DEV_AWS_ACCOUNT_ID }}
          version=1.0.0-${{ env.IMAGE_REF }}

          if [[ "$ref" == "master" || "$ref" == "main" ]]; 
            accountId=${{ env.PROD_AWS_ACCOUNT_ID }};
            version=1.0.0-master-${{ steps.commit.outputs.short }}
          fi

          registry="${accountId}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com"
          repository="${{ env.ECR_REPOSITORY }}"
          image="${registry}/${repository}:${version}"
          
          echo "Account ID: ${accountId}"
          echo "Repository: ${repository}"
          echo "Version: ${version}"
          echo "Image: ${image}"
          
          echo "accountId=$accountId" >> $GITHUB_OUTPUT 
          echo "registry=$registry" >> $GITHUB_OUTPUT
          echo "image=$image" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::202337591493:role/kinsend-infra
          role-skip-session-tagging: true
          role-duration-seconds: 900

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.vars.outputs.repository }}

      - name: Build the kinsend-be Docker image
        run: |
          docker build -t ${{ steps.vars.outputs.image }} .

      - name: Push the kinsend-be Docker image
        run: |
          docker push ${{ steps.vars.outputs.image }}

      - name: Post Docker clean-up
        if: ${{ always() }}
        run: |
          rm -rf ~/.docker/config.json
          #docker system prune --all --force

      - name: Post job report comment reaction
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          comment-id: ${{ github.event.comment.id }}
          reactions: ${{ success() && 'hooray' || '-1' }}

      - name: Post job report add comment on success push
        uses: peter-evans/create-or-update-comment@v3
        if: ${{ success() }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          comment-id: ${{ github.event.comment.id }}
          body: "Successfully pushed Docker image to `${{ steps.vars.outputs.image }}`"

      - name: Post job docker push action report
        uses: LouisBrunner/checks-action@v1.6.0
        if: ${{ always() }}
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: publish
          conclusion: ${{ job.status }}
          status: completed
